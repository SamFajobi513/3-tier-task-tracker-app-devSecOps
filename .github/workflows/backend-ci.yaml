name: backend Application
env:
  AWS_REGION: us-east-1               
  ECR_REPOSITORY: backend-tracker
on:
  push:
    branches: [ "main" ]
    paths:
      - 'app-source-code/backend/**'
    paths-ignore:
      - '.github/workflows/frontend-ci.yaml'
      - '.github/workflows/eks-ci.yaml'   
  pull_request:
    branches: [ "main" ]
    paths:
      - 'app-source-code/backend/**'
    paths-ignore:
      - '.github/workflows/frontend-ci.yaml'
      - '.github/workflows/eks-ci.yaml'     
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout repository
      uses: actions/checkout@v4
    - 
      name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16.x 
        cache: 'npm'
    - 
      name: Install Dependencies
      uses: npm ci
    - 
      name: Run Linting
      uses: npm run lint
    - 
      name: Run Tests
      uses: actions/checkout@v4     

  deploy:
    name: Deploy to server
    environment: staging
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        repo: [currencyservice, paymentservice]
    permissions:
      id-token: write
      contents: read
    needs: build
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v4
    - 
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::953523290929:role/github-actions-role
        aws-region: ${{ env.AWS_REGION }}
    - 
      name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'
    - 
      name: Build and tag image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        COMMIT_SHA: ${{ github.sha }}
      run: |
        echo "Building Docker Image fOR repositories: $ECR_REPOSITORY"
        IFS="," read -r -a REPOSITORIES  <<< "$ECR_REPOSITORY"
        for repo in "${REPOSITORIES[@]}"; do
          echo "Building Docker Image for $repo"
          pushd app-source-code/$repo
          docker build -t $ECR_REGISTRY/$repo:$COMMIT_SHA .
          docker build -t $ECR_REGISTRY/$repo:stg .
          popd
        done
    - 
      name: Run Trivy vulnerability scanner
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.ECR_REGISTRY }}/${{ matrix.repo }}:stg'
        format: 'table'
        #exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - 
      name: Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        COMMIT_SHA: ${{ github.sha }}
      run: |
        echo "Pushing Docker Image"
        docker push $ECR_REGISTRY/${{ matrix.repo }}:$COMMIT_SHA
        docker push $ECR_REGISTRY/${{ matrix.repo }}:stg
     